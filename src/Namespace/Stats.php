<?php declare(strict_types=1);
/**
 * This file is automatic generated by build_docs.php file
 * and is used only for autocomplete in multiple IDE
 * don't modify manually.
 */

namespace danog\MadelineProto\Namespace;

interface Stats
{
    /**
     * Get [channel statistics](https://core.telegram.org/api/stats).
     *
     * @param array|int|string $channel The channel @see https://docs.madelineproto.xyz/API_docs/types/InputChannel.html
     * @param bool $dark Whether to enable dark theme for graph colors
     * @return array{_: 'stats.broadcastStats', period: array{_: 'statsDateRangeDays', min_date: int, max_date: int}, followers: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, views_per_post: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, shares_per_post: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, enabled_notifications: array{_: 'statsPercentValue', part: float, total: float}, growth_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, followers_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, mute_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, top_hours_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, interactions_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, iv_interactions_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, views_by_source_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, new_followers_by_source_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, languages_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, recent_message_interactions: list<array{_: 'messageInteractionCounters', msg_id: int, views: int, forwards: int}>} @see https://docs.madelineproto.xyz/API_docs/types/stats.BroadcastStats.html
     */
    public function getBroadcastStats(array|int|string $channel, bool $dark = false): array;

    /**
     * Load [channel statistics graph](https://core.telegram.org/api/stats) asynchronously.
     *
     * @param string $token Graph token from [statsGraphAsync](https://docs.madelineproto.xyz/API_docs/constructors/statsGraphAsync.html) constructor
     * @param int $x Zoom value, if required
     * @return array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string} @see https://docs.madelineproto.xyz/API_docs/types/StatsGraph.html
     */
    public function loadAsyncGraph(string $token = '', int $x = 0): array;

    /**
     * Get [supergroup statistics](https://core.telegram.org/api/stats).
     *
     * @param array|int|string $channel [Supergroup ID](https://core.telegram.org/api/channel) @see https://docs.madelineproto.xyz/API_docs/types/InputChannel.html
     * @param bool $dark Whether to enable dark theme for graph colors
     * @return array{_: 'stats.megagroupStats', period: array{_: 'statsDateRangeDays', min_date: int, max_date: int}, members: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, messages: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, viewers: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, posters: array{_: 'statsAbsValueAndPrev', current: float, previous: float}, growth_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, members_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, new_members_by_source_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, languages_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, messages_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, actions_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, top_hours_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, weekdays_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}, top_posters: list<array{_: 'statsGroupTopPoster', user_id: int, messages: int, avg_chars: int}>, top_admins: list<array{_: 'statsGroupTopAdmin', user_id: int, deleted: int, kicked: int, banned: int}>, top_inviters: list<array{_: 'statsGroupTopInviter', user_id: int, invitations: int}>, users: list<array|int|string>} @see https://docs.madelineproto.xyz/API_docs/types/stats.MegagroupStats.html
     */
    public function getMegagroupStats(array|int|string $channel, bool $dark = false): array;

    /**
     * Obtains a list of messages, indicating to which other public channels was a channel message forwarded.
     * Will return a list of [messages](https://docs.madelineproto.xyz/API_docs/constructors/message.html) with `peer_id` equal to the public channel to which this message was forwarded.
     *
     * @param array|int|string $channel Source channel @see https://docs.madelineproto.xyz/API_docs/types/InputChannel.html
     * @param array|int|string $offset_peer [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) @see https://docs.madelineproto.xyz/API_docs/types/InputPeer.html
     * @param int $msg_id Source message ID
     * @param int $offset_rate Initially 0, then set to the `next_rate` parameter of [messages.messagesSlice](https://docs.madelineproto.xyz/API_docs/constructors/messages.messagesSlice.html)
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @return array{_: 'messages.messages', messages: list<array{_: 'messageEmpty', id: int, peer_id?: array|int|string}|array{_: 'message', peer_id: array|int|string, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, from_scheduled: bool, legacy: bool, edit_hide: bool, pinned: bool, noforwards: bool, id: int, from_id?: array|int|string, fwd_from?: array{_: 'messageFwdHeader', imported: array, from_id?: array, from_name: array, date: array, channel_post: array, post_author: array, saved_from_peer?: array, saved_from_msg_id: array, psa_type: array}, via_bot_id: int, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, message: string, media?: array{_: 'messageMediaEmpty'}|array{_: 'messageMediaPhoto', spoiler: bool, photo?: array{_: 'photoEmpty', id: array}|array{_: 'photo', has_stickers: array, id: array, access_hash: array, file_reference: array, date: array, sizes: list<array>, video_sizes: list<array>, dc_id: array}, ttl_seconds: int}|array{_: 'messageMediaGeo', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}}|array{_: 'messageMediaContact', phone_number: string, first_name: string, last_name: string, vcard: string, user_id: int}|array{_: 'messageMediaUnsupported'}|array{_: 'messageMediaDocument', nopremium: bool, spoiler: bool, document?: array{_: 'documentEmpty', id: array}|array{_: 'document', id: array, access_hash: array, file_reference: array, date: array, mime_type: array, size: array, thumbs: list<array>, video_thumbs: list<array>, dc_id: array, attributes: list<array>}, ttl_seconds: int}|array{_: 'messageMediaWebPage', webpage: array{_: 'webPageEmpty', id: array}|array{_: 'webPagePending', id: array, date: array}|array{_: 'webPage', id: array, url: array, display_url: array, hash: array, type: array, site_name: array, title: array, description: array, photo?: array, embed_url: array, embed_type: array, embed_width: array, embed_height: array, duration: array, author: array, document?: array, cached_page?: array, attributes: list<array>}|array{_: 'webPageNotModified', cached_page_views: array}}|array{_: 'messageMediaVenue', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, title: string, address: string, provider: string, venue_id: string, venue_type: string}|array{_: 'messageMediaGame', game: array{_: 'game', photo: array, id: array, access_hash: array, short_name: array, title: array, description: array, document?: array}}|array{_: 'messageMediaInvoice', shipping_address_requested: bool, test: bool, title: string, description: string, photo?: array{_: 'webDocument', url: array, access_hash: array, size: array, mime_type: array, attributes: list<array>}|array{_: 'webDocumentNoProxy', url: array, size: array, mime_type: array, attributes: list<array>}, receipt_msg_id: int, currency: string, total_amount: int, start_param: string, extended_media?: array{_: 'messageExtendedMediaPreview', w: array, h: array, thumb?: array, video_duration: array}}|array{_: 'messageMediaGeoLive', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, heading: int, period: int, proximity_notification_radius: int}|array{_: 'messageMediaPoll', poll: array{_: 'poll', id: array, closed: array, public_voters: array, multiple_choice: array, quiz: array, question: array, answers: list<array>, close_period: array, close_date: array}, results: array{_: 'pollResults', min: array, results: list<array>, total_voters: array, recent_voters: list<array>, solution: array, solution_entities: list<array>}}|array{_: 'messageMediaDice', value: int, emoticon: string}, reply_markup?: array, entities: list<array{_: 'messageEntityUnknown', offset: array, length: array}|array{_: 'messageEntityMention', offset: array, length: array}|array{_: 'messageEntityHashtag', offset: array, length: array}|array{_: 'messageEntityBotCommand', offset: array, length: array}|array{_: 'messageEntityUrl', offset: array, length: array}|array{_: 'messageEntityEmail', offset: array, length: array}|array{_: 'messageEntityBold', offset: array, length: array}|array{_: 'messageEntityItalic', offset: array, length: array}|array{_: 'messageEntityCode', offset: array, length: array}|array{_: 'messageEntityPre', offset: array, length: array, language: array}|array{_: 'messageEntityTextUrl', offset: array, length: array, url: array}|array{_: 'messageEntityMentionName', offset: array, length: array, user_id: array}|array{_: 'inputMessageEntityMentionName', user_id: array, offset: array, length: array}|array{_: 'messageEntityPhone', offset: array, length: array}|array{_: 'messageEntityCashtag', offset: array, length: array}|array{_: 'messageEntityUnderline', offset: array, length: array}|array{_: 'messageEntityStrike', offset: array, length: array}|array{_: 'messageEntityBlockquote', offset: array, length: array}|array{_: 'messageEntityBankCard', offset: array, length: array}|array{_: 'messageEntitySpoiler', offset: array, length: array}|array{_: 'messageEntityCustomEmoji', offset: array, length: array, document_id: array}>, views: int, forwards: int, replies?: array{_: 'messageReplies', comments: array, replies: array, replies_pts: array, recent_repliers: list<array>, channel_id: array, max_id: array, read_max_id: array}, edit_date: int, post_author: string, grouped_id: int, reactions?: array{_: 'messageReactions', min: array, can_see_list: array, results: list<array>, recent_reactions: list<array>}, restriction_reason: list<array{_: 'restrictionReason', platform: array, reason: array, text: array}>, ttl_period: int}|array{_: 'messageService', peer_id: array|int|string, action: array{_: 'messageActionEmpty'}|array{_: 'messageActionChatCreate', title: array, users: list<array>}|array{_: 'messageActionChatEditTitle', title: array}|array{_: 'messageActionChatEditPhoto', photo: array}|array{_: 'messageActionChatDeletePhoto'}|array{_: 'messageActionChatAddUser', users: list<array>}|array{_: 'messageActionChatDeleteUser', user_id: array}|array{_: 'messageActionChatJoinedByLink', inviter_id: array}|array{_: 'messageActionChannelCreate', title: array}|array{_: 'messageActionChatMigrateTo', channel_id: array}|array{_: 'messageActionChannelMigrateFrom', chat_id: array, title: array}|array{_: 'messageActionPinMessage'}|array{_: 'messageActionHistoryClear'}|array{_: 'messageActionGameScore', game_id: array, score: array}|array{_: 'messageActionPaymentSentMe', charge: array, recurring_init: array, recurring_used: array, currency: array, total_amount: array, payload: array, info?: array, shipping_option_id: array}|array{_: 'messageActionPaymentSent', recurring_init: array, recurring_used: array, currency: array, total_amount: array, invoice_slug: array}|array{_: 'messageActionPhoneCall', video: array, call_id: array, reason?: array, duration: array}|array{_: 'messageActionScreenshotTaken'}|array{_: 'messageActionCustomAction', message: array}|array{_: 'messageActionBotAllowed', attach_menu: array, domain: array, app?: array}|array{_: 'messageActionSecureValuesSentMe', credentials: array, values: list<array>}|array{_: 'messageActionSecureValuesSent', types: list<array>}|array{_: 'messageActionContactSignUp'}|array{_: 'messageActionGeoProximityReached', from_id: array, to_id: array, distance: array}|array{_: 'messageActionGroupCall', call: array, duration: array}|array{_: 'messageActionInviteToGroupCall', call: array, users: list<array>}|array{_: 'messageActionSetMessagesTTL', period: array, auto_setting_from: array}|array{_: 'messageActionGroupCallScheduled', call: array, schedule_date: array}|array{_: 'messageActionSetChatTheme', emoticon: array}|array{_: 'messageActionChatJoinedByRequest'}|array{_: 'messageActionWebViewDataSentMe', text: array, data: array}|array{_: 'messageActionWebViewDataSent', text: array}|array{_: 'messageActionGiftPremium', currency: array, amount: array, months: array}|array{_: 'messageActionTopicCreate', title: array, icon_color: array, icon_emoji_id: array}|array{_: 'messageActionTopicEdit', title: array, icon_emoji_id: array, closed?: array, hidden?: array}|array{_: 'messageActionSuggestProfilePhoto', photo: array}|array{_: 'messageActionRequestedPeer', peer: array, button_id: array}, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, legacy: bool, id: int, from_id?: array|int|string, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, ttl_period: int}>, chats: list<array|int|string>, users: list<array|int|string>}|array{_: 'messages.messagesSlice', inexact: bool, count: int, next_rate: int, offset_id_offset: int, messages: list<array{_: 'messageEmpty', id: int, peer_id?: array|int|string}|array{_: 'message', peer_id: array|int|string, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, from_scheduled: bool, legacy: bool, edit_hide: bool, pinned: bool, noforwards: bool, id: int, from_id?: array|int|string, fwd_from?: array{_: 'messageFwdHeader', imported: array, from_id?: array, from_name: array, date: array, channel_post: array, post_author: array, saved_from_peer?: array, saved_from_msg_id: array, psa_type: array}, via_bot_id: int, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, message: string, media?: array{_: 'messageMediaEmpty'}|array{_: 'messageMediaPhoto', spoiler: bool, photo?: array{_: 'photoEmpty', id: array}|array{_: 'photo', has_stickers: array, id: array, access_hash: array, file_reference: array, date: array, sizes: list<array>, video_sizes: list<array>, dc_id: array}, ttl_seconds: int}|array{_: 'messageMediaGeo', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}}|array{_: 'messageMediaContact', phone_number: string, first_name: string, last_name: string, vcard: string, user_id: int}|array{_: 'messageMediaUnsupported'}|array{_: 'messageMediaDocument', nopremium: bool, spoiler: bool, document?: array{_: 'documentEmpty', id: array}|array{_: 'document', id: array, access_hash: array, file_reference: array, date: array, mime_type: array, size: array, thumbs: list<array>, video_thumbs: list<array>, dc_id: array, attributes: list<array>}, ttl_seconds: int}|array{_: 'messageMediaWebPage', webpage: array{_: 'webPageEmpty', id: array}|array{_: 'webPagePending', id: array, date: array}|array{_: 'webPage', id: array, url: array, display_url: array, hash: array, type: array, site_name: array, title: array, description: array, photo?: array, embed_url: array, embed_type: array, embed_width: array, embed_height: array, duration: array, author: array, document?: array, cached_page?: array, attributes: list<array>}|array{_: 'webPageNotModified', cached_page_views: array}}|array{_: 'messageMediaVenue', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, title: string, address: string, provider: string, venue_id: string, venue_type: string}|array{_: 'messageMediaGame', game: array{_: 'game', photo: array, id: array, access_hash: array, short_name: array, title: array, description: array, document?: array}}|array{_: 'messageMediaInvoice', shipping_address_requested: bool, test: bool, title: string, description: string, photo?: array{_: 'webDocument', url: array, access_hash: array, size: array, mime_type: array, attributes: list<array>}|array{_: 'webDocumentNoProxy', url: array, size: array, mime_type: array, attributes: list<array>}, receipt_msg_id: int, currency: string, total_amount: int, start_param: string, extended_media?: array{_: 'messageExtendedMediaPreview', w: array, h: array, thumb?: array, video_duration: array}}|array{_: 'messageMediaGeoLive', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, heading: int, period: int, proximity_notification_radius: int}|array{_: 'messageMediaPoll', poll: array{_: 'poll', id: array, closed: array, public_voters: array, multiple_choice: array, quiz: array, question: array, answers: list<array>, close_period: array, close_date: array}, results: array{_: 'pollResults', min: array, results: list<array>, total_voters: array, recent_voters: list<array>, solution: array, solution_entities: list<array>}}|array{_: 'messageMediaDice', value: int, emoticon: string}, reply_markup?: array, entities: list<array{_: 'messageEntityUnknown', offset: array, length: array}|array{_: 'messageEntityMention', offset: array, length: array}|array{_: 'messageEntityHashtag', offset: array, length: array}|array{_: 'messageEntityBotCommand', offset: array, length: array}|array{_: 'messageEntityUrl', offset: array, length: array}|array{_: 'messageEntityEmail', offset: array, length: array}|array{_: 'messageEntityBold', offset: array, length: array}|array{_: 'messageEntityItalic', offset: array, length: array}|array{_: 'messageEntityCode', offset: array, length: array}|array{_: 'messageEntityPre', offset: array, length: array, language: array}|array{_: 'messageEntityTextUrl', offset: array, length: array, url: array}|array{_: 'messageEntityMentionName', offset: array, length: array, user_id: array}|array{_: 'inputMessageEntityMentionName', user_id: array, offset: array, length: array}|array{_: 'messageEntityPhone', offset: array, length: array}|array{_: 'messageEntityCashtag', offset: array, length: array}|array{_: 'messageEntityUnderline', offset: array, length: array}|array{_: 'messageEntityStrike', offset: array, length: array}|array{_: 'messageEntityBlockquote', offset: array, length: array}|array{_: 'messageEntityBankCard', offset: array, length: array}|array{_: 'messageEntitySpoiler', offset: array, length: array}|array{_: 'messageEntityCustomEmoji', offset: array, length: array, document_id: array}>, views: int, forwards: int, replies?: array{_: 'messageReplies', comments: array, replies: array, replies_pts: array, recent_repliers: list<array>, channel_id: array, max_id: array, read_max_id: array}, edit_date: int, post_author: string, grouped_id: int, reactions?: array{_: 'messageReactions', min: array, can_see_list: array, results: list<array>, recent_reactions: list<array>}, restriction_reason: list<array{_: 'restrictionReason', platform: array, reason: array, text: array}>, ttl_period: int}|array{_: 'messageService', peer_id: array|int|string, action: array{_: 'messageActionEmpty'}|array{_: 'messageActionChatCreate', title: array, users: list<array>}|array{_: 'messageActionChatEditTitle', title: array}|array{_: 'messageActionChatEditPhoto', photo: array}|array{_: 'messageActionChatDeletePhoto'}|array{_: 'messageActionChatAddUser', users: list<array>}|array{_: 'messageActionChatDeleteUser', user_id: array}|array{_: 'messageActionChatJoinedByLink', inviter_id: array}|array{_: 'messageActionChannelCreate', title: array}|array{_: 'messageActionChatMigrateTo', channel_id: array}|array{_: 'messageActionChannelMigrateFrom', chat_id: array, title: array}|array{_: 'messageActionPinMessage'}|array{_: 'messageActionHistoryClear'}|array{_: 'messageActionGameScore', game_id: array, score: array}|array{_: 'messageActionPaymentSentMe', charge: array, recurring_init: array, recurring_used: array, currency: array, total_amount: array, payload: array, info?: array, shipping_option_id: array}|array{_: 'messageActionPaymentSent', recurring_init: array, recurring_used: array, currency: array, total_amount: array, invoice_slug: array}|array{_: 'messageActionPhoneCall', video: array, call_id: array, reason?: array, duration: array}|array{_: 'messageActionScreenshotTaken'}|array{_: 'messageActionCustomAction', message: array}|array{_: 'messageActionBotAllowed', attach_menu: array, domain: array, app?: array}|array{_: 'messageActionSecureValuesSentMe', credentials: array, values: list<array>}|array{_: 'messageActionSecureValuesSent', types: list<array>}|array{_: 'messageActionContactSignUp'}|array{_: 'messageActionGeoProximityReached', from_id: array, to_id: array, distance: array}|array{_: 'messageActionGroupCall', call: array, duration: array}|array{_: 'messageActionInviteToGroupCall', call: array, users: list<array>}|array{_: 'messageActionSetMessagesTTL', period: array, auto_setting_from: array}|array{_: 'messageActionGroupCallScheduled', call: array, schedule_date: array}|array{_: 'messageActionSetChatTheme', emoticon: array}|array{_: 'messageActionChatJoinedByRequest'}|array{_: 'messageActionWebViewDataSentMe', text: array, data: array}|array{_: 'messageActionWebViewDataSent', text: array}|array{_: 'messageActionGiftPremium', currency: array, amount: array, months: array}|array{_: 'messageActionTopicCreate', title: array, icon_color: array, icon_emoji_id: array}|array{_: 'messageActionTopicEdit', title: array, icon_emoji_id: array, closed?: array, hidden?: array}|array{_: 'messageActionSuggestProfilePhoto', photo: array}|array{_: 'messageActionRequestedPeer', peer: array, button_id: array}, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, legacy: bool, id: int, from_id?: array|int|string, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, ttl_period: int}>, chats: list<array|int|string>, users: list<array|int|string>}|array{_: 'messages.channelMessages', inexact: bool, pts: int, count: int, offset_id_offset: int, messages: list<array{_: 'messageEmpty', id: int, peer_id?: array|int|string}|array{_: 'message', peer_id: array|int|string, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, from_scheduled: bool, legacy: bool, edit_hide: bool, pinned: bool, noforwards: bool, id: int, from_id?: array|int|string, fwd_from?: array{_: 'messageFwdHeader', imported: array, from_id?: array, from_name: array, date: array, channel_post: array, post_author: array, saved_from_peer?: array, saved_from_msg_id: array, psa_type: array}, via_bot_id: int, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, message: string, media?: array{_: 'messageMediaEmpty'}|array{_: 'messageMediaPhoto', spoiler: bool, photo?: array{_: 'photoEmpty', id: array}|array{_: 'photo', has_stickers: array, id: array, access_hash: array, file_reference: array, date: array, sizes: list<array>, video_sizes: list<array>, dc_id: array}, ttl_seconds: int}|array{_: 'messageMediaGeo', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}}|array{_: 'messageMediaContact', phone_number: string, first_name: string, last_name: string, vcard: string, user_id: int}|array{_: 'messageMediaUnsupported'}|array{_: 'messageMediaDocument', nopremium: bool, spoiler: bool, document?: array{_: 'documentEmpty', id: array}|array{_: 'document', id: array, access_hash: array, file_reference: array, date: array, mime_type: array, size: array, thumbs: list<array>, video_thumbs: list<array>, dc_id: array, attributes: list<array>}, ttl_seconds: int}|array{_: 'messageMediaWebPage', webpage: array{_: 'webPageEmpty', id: array}|array{_: 'webPagePending', id: array, date: array}|array{_: 'webPage', id: array, url: array, display_url: array, hash: array, type: array, site_name: array, title: array, description: array, photo?: array, embed_url: array, embed_type: array, embed_width: array, embed_height: array, duration: array, author: array, document?: array, cached_page?: array, attributes: list<array>}|array{_: 'webPageNotModified', cached_page_views: array}}|array{_: 'messageMediaVenue', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, title: string, address: string, provider: string, venue_id: string, venue_type: string}|array{_: 'messageMediaGame', game: array{_: 'game', photo: array, id: array, access_hash: array, short_name: array, title: array, description: array, document?: array}}|array{_: 'messageMediaInvoice', shipping_address_requested: bool, test: bool, title: string, description: string, photo?: array{_: 'webDocument', url: array, access_hash: array, size: array, mime_type: array, attributes: list<array>}|array{_: 'webDocumentNoProxy', url: array, size: array, mime_type: array, attributes: list<array>}, receipt_msg_id: int, currency: string, total_amount: int, start_param: string, extended_media?: array{_: 'messageExtendedMediaPreview', w: array, h: array, thumb?: array, video_duration: array}}|array{_: 'messageMediaGeoLive', geo: array{_: 'geoPointEmpty'}|array{_: 'geoPoint', long: array, lat: array, access_hash: array, accuracy_radius: array}, heading: int, period: int, proximity_notification_radius: int}|array{_: 'messageMediaPoll', poll: array{_: 'poll', id: array, closed: array, public_voters: array, multiple_choice: array, quiz: array, question: array, answers: list<array>, close_period: array, close_date: array}, results: array{_: 'pollResults', min: array, results: list<array>, total_voters: array, recent_voters: list<array>, solution: array, solution_entities: list<array>}}|array{_: 'messageMediaDice', value: int, emoticon: string}, reply_markup?: array, entities: list<array{_: 'messageEntityUnknown', offset: array, length: array}|array{_: 'messageEntityMention', offset: array, length: array}|array{_: 'messageEntityHashtag', offset: array, length: array}|array{_: 'messageEntityBotCommand', offset: array, length: array}|array{_: 'messageEntityUrl', offset: array, length: array}|array{_: 'messageEntityEmail', offset: array, length: array}|array{_: 'messageEntityBold', offset: array, length: array}|array{_: 'messageEntityItalic', offset: array, length: array}|array{_: 'messageEntityCode', offset: array, length: array}|array{_: 'messageEntityPre', offset: array, length: array, language: array}|array{_: 'messageEntityTextUrl', offset: array, length: array, url: array}|array{_: 'messageEntityMentionName', offset: array, length: array, user_id: array}|array{_: 'inputMessageEntityMentionName', user_id: array, offset: array, length: array}|array{_: 'messageEntityPhone', offset: array, length: array}|array{_: 'messageEntityCashtag', offset: array, length: array}|array{_: 'messageEntityUnderline', offset: array, length: array}|array{_: 'messageEntityStrike', offset: array, length: array}|array{_: 'messageEntityBlockquote', offset: array, length: array}|array{_: 'messageEntityBankCard', offset: array, length: array}|array{_: 'messageEntitySpoiler', offset: array, length: array}|array{_: 'messageEntityCustomEmoji', offset: array, length: array, document_id: array}>, views: int, forwards: int, replies?: array{_: 'messageReplies', comments: array, replies: array, replies_pts: array, recent_repliers: list<array>, channel_id: array, max_id: array, read_max_id: array}, edit_date: int, post_author: string, grouped_id: int, reactions?: array{_: 'messageReactions', min: array, can_see_list: array, results: list<array>, recent_reactions: list<array>}, restriction_reason: list<array{_: 'restrictionReason', platform: array, reason: array, text: array}>, ttl_period: int}|array{_: 'messageService', peer_id: array|int|string, action: array{_: 'messageActionEmpty'}|array{_: 'messageActionChatCreate', title: array, users: list<array>}|array{_: 'messageActionChatEditTitle', title: array}|array{_: 'messageActionChatEditPhoto', photo: array}|array{_: 'messageActionChatDeletePhoto'}|array{_: 'messageActionChatAddUser', users: list<array>}|array{_: 'messageActionChatDeleteUser', user_id: array}|array{_: 'messageActionChatJoinedByLink', inviter_id: array}|array{_: 'messageActionChannelCreate', title: array}|array{_: 'messageActionChatMigrateTo', channel_id: array}|array{_: 'messageActionChannelMigrateFrom', chat_id: array, title: array}|array{_: 'messageActionPinMessage'}|array{_: 'messageActionHistoryClear'}|array{_: 'messageActionGameScore', game_id: array, score: array}|array{_: 'messageActionPaymentSentMe', charge: array, recurring_init: array, recurring_used: array, currency: array, total_amount: array, payload: array, info?: array, shipping_option_id: array}|array{_: 'messageActionPaymentSent', recurring_init: array, recurring_used: array, currency: array, total_amount: array, invoice_slug: array}|array{_: 'messageActionPhoneCall', video: array, call_id: array, reason?: array, duration: array}|array{_: 'messageActionScreenshotTaken'}|array{_: 'messageActionCustomAction', message: array}|array{_: 'messageActionBotAllowed', attach_menu: array, domain: array, app?: array}|array{_: 'messageActionSecureValuesSentMe', credentials: array, values: list<array>}|array{_: 'messageActionSecureValuesSent', types: list<array>}|array{_: 'messageActionContactSignUp'}|array{_: 'messageActionGeoProximityReached', from_id: array, to_id: array, distance: array}|array{_: 'messageActionGroupCall', call: array, duration: array}|array{_: 'messageActionInviteToGroupCall', call: array, users: list<array>}|array{_: 'messageActionSetMessagesTTL', period: array, auto_setting_from: array}|array{_: 'messageActionGroupCallScheduled', call: array, schedule_date: array}|array{_: 'messageActionSetChatTheme', emoticon: array}|array{_: 'messageActionChatJoinedByRequest'}|array{_: 'messageActionWebViewDataSentMe', text: array, data: array}|array{_: 'messageActionWebViewDataSent', text: array}|array{_: 'messageActionGiftPremium', currency: array, amount: array, months: array}|array{_: 'messageActionTopicCreate', title: array, icon_color: array, icon_emoji_id: array}|array{_: 'messageActionTopicEdit', title: array, icon_emoji_id: array, closed?: array, hidden?: array}|array{_: 'messageActionSuggestProfilePhoto', photo: array}|array{_: 'messageActionRequestedPeer', peer: array, button_id: array}, out: bool, mentioned: bool, media_unread: bool, silent: bool, post: bool, legacy: bool, id: int, from_id?: array|int|string, reply_to?: array{_: 'messageReplyHeader', reply_to_scheduled: array, forum_topic: array, reply_to_msg_id: array, reply_to_peer_id?: array, reply_to_top_id: array}, date: int, ttl_period: int}>, topics: list<array{_: 'forumTopicDeleted', id: int}|array{_: 'forumTopic', from_id: array|int|string, notify_settings: array{_: 'peerNotifySettings', show_previews?: array, silent?: array, mute_until: array, ios_sound?: array, android_sound?: array, other_sound?: array}, my: bool, closed: bool, pinned: bool, short: bool, hidden: bool, id: int, date: int, title: string, icon_color: int, icon_emoji_id: int, top_message: int, read_inbox_max_id: int, read_outbox_max_id: int, unread_count: int, unread_mentions_count: int, unread_reactions_count: int, draft?: array{_: 'draftMessageEmpty', date: array}|array{_: 'draftMessage', no_webpage: array, reply_to_msg_id: array, message: array, entities: list<array>, date: array}}>, chats: list<array|int|string>, users: list<array|int|string>}|array{_: 'messages.messagesNotModified', count: int} @see https://docs.madelineproto.xyz/API_docs/types/messages.Messages.html
     */
    public function getMessagePublicForwards(array|int|string $channel, array|int|string $offset_peer, int $msg_id = 0, int $offset_rate = 0, int $offset_id = 0, int $limit = 0): array;

    /**
     * Get [message statistics](https://core.telegram.org/api/stats).
     *
     * @param array|int|string $channel Channel ID @see https://docs.madelineproto.xyz/API_docs/types/InputChannel.html
     * @param bool $dark Whether to enable dark theme for graph colors
     * @param int $msg_id Message ID
     * @return array{_: 'stats.messageStats', views_graph: array{_: 'statsGraphAsync', token: string}|array{_: 'statsGraphError', error: string}|array{_: 'statsGraph', json: mixed, zoom_token: string}} @see https://docs.madelineproto.xyz/API_docs/types/stats.MessageStats.html
     */
    public function getMessageStats(array|int|string $channel, bool $dark = false, int $msg_id = 0): array;
}
